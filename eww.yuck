(defwidget bar []
  (centerbox :class "bar" :orientation "h" 
    (left-group) (middle-group) (right-group)
))


; ---- Grouppings ----;
(defwidget left-group []
  (box :class "left-group" :space-evenly false :halign "start"
    (time-date)
    (spacer :icon "")
    (system-tray)
  )    
)

(defwidget middle-group []
  (box :class "middle-group" :space-evenly false :halign "center"
    (workspaces)
  )
)

(defwidget right-group []
  (box :class "right-group" :space-evenly false :halign "end"
    (brightness)
    (microphone)
    (speaker) 
    (network)
    (battery)
    (spacer :icon "")
    (performancemenu)
    (settingsmenu)
    (powermenu)
  )    
)



; ---- Actual Components ---- ;
; Time - Date
(defpoll time :interval "10s" "date '+%H:%M | %d. %b'")
(defwidget time-date [] time)

; System tray
(defvar tray-elements "[1, 2, 3, 4]")
(defwidget system-tray []
  (box :class "system-tray"
    (for element in tray-elements
      (box :class "system-tray-element"
        (label :text "()") 
      )
    )
  )
)

; Spacer
(defwidget spacer [?icon]
  (box :class "spacer"
    (label :text "${icon}")
  )
)

; Network - (Make support ethernet connection)
(defpoll net :interval "60s" :initial "N/A"
  `nmcli -t -f SIGNAL,ACTIVE dev wifi \
  | awk -F':' '{if($2=="yes")print$1}'`)

(defwidget network []
  (box :class "network icon" :tooltip "Signal Strength: ${net}%"
    (label :text {
      net == "" ? "󰤭" : ; Offline
      net < 26 ? "󰤟" :  ; Bad
      net < 51 ? "󰤢" :  ; Okay
      net < 76 ? "󰤥" :  ; Good
      "󰤨"}              ; Excellent
    )
  )
)


; Speaker
(defpoll speaker-muted :interval "60s" :initial ""
  `wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk -F '[][]' '{print $2}'`
)
(defpoll speaker-volume :interval "60s" :initial ""
  `wpctl get-volume @DEFAULT_AUDIO_SINK@ | 
    awk -F'[: ]+' '/Volume:/ {print $2}'` 
)

(defwidget speaker []
  (box :class "speaker icon" 
       :tooltip "${speaker-muted == "MUTED" ? "Muted" : "Volume"}: ${speaker-volume * 100}%"
    (label :text { 
      speaker-muted == "MUTED" ? "󰖁" : "${
        speaker-volume < 0.33 ? "󰕿" :
        speaker-volume < 0.66 ? "󰖀" :
        "󰕾"
      }"
    })
  )
)


; Microphone
(defpoll microphone-muted :interval "60s" :initial ""
  `wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | awk -F '[][]' '{print $2}'`
)
(defpoll microphone-volume :interval "60s" :initial ""
  `wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | 
    awk -F'[: ]+' '/Volume:/ {print $2}'` 
)

(defwidget microphone []
  (box :class "microphone icon" 
       :tooltip "${microphone-muted == "MUTED" ? "Muted" : "Volume"}: ${microphone-volume * 100}%"
    (label :text { microphone-muted == "MUTED" ? "󰍭" : "󰍬" })
  )
)


; Brightness
(defpoll max-b :interval "24h" :initial "" 
  `brightnessctl m`
)
(defpoll curr-b :interval "60s" :initial "" 
  `brightnessctl g`
)

(defwidget brightness []
  (box :class "brightness icon" :tooltip "Brightness: ${curr-b / max-b * 100}%"
    (label :text { 
      curr-b/max-b*100 < 33 ? "󰃞" :
      curr-b/max-b*100 < 66 ? "󰃟" :
      "󰃠"
    })
  )
)



; Battery
(defpoll bat-cap :interval "60s" :initial "N/A"
  `cat /sys/class/power_supply/BAT0/capacity`
)
(defpoll ac :interval "60s" :initial "N/A"
  `cat /sys/class/power_supply/AC/online`
)

(defwidget battery []
  (box :class "battery icon" :tooltip "Battery: ${bat-cap}%"
    (label :text { ac == "1" ? "${  
        ; Charging 
        bat-cap < 25 ? "󰢟" :
        bat-cap < 50 ? "󱊤" :
        bat-cap < 75 ? "󱊥" :
        "󱊦" 
    }" : "${
        ; Discharging
        bat-cap < 25 ? "󰂎" :
        bat-cap < 50 ? "󱊡" :
        bat-cap < 75 ? "󱊢" :
        "󱊣"
    }" }
    )
  )
)


; Workspaces
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces []
  (box :class "workspaces" :space-evenly true
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
        (box :class "workspace-icon ${workspace.id == current_workspace ? "focus" : ""} ${workspace.windows > 0 ? "in-use" : "empty"}"
          (label :text "${workspace.id}")
        )
      )
    )
  )
)


; Powermenu
(defwidget powermenu []
  (box :class "powermenu icon"
    (label :text "󰐥")
  )
)

; Settingsmenu
(defwidget settingsmenu []
  (box :class "settingsmenu icon"
    (label :text "󰣖")
  )
)

; Performacemenu
(defwidget performancemenu []
  (box :class "performancemenu icon"
    (label :text "")
  )
)



; ---- Windows ----;
(defwindow bar0
  :monitor 0
  :stacking "fg"
  :exclusive "true"
  :focusable "false"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "4%"
                      :anchor "top center")
  (bar))

(defwindow bar1
  :monitor 1
  :stacking "fg"
  :exclusive "true"
  :focusable "false"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "4%"
                      :anchor "top center")
  (bar))
