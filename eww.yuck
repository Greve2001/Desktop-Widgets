(defwidget bar []
  (centerbox :class "bar" :orientation "h" 
    (left-group) (middle-group) (right-group)
))


; ---- Compartments ----;

(defwidget left-group []
  (box :class "left-group" :space-evenly false :halign "start"
    (time-date)
  )    
)

(defwidget middle-group []
  (box :class "middle-group" :space-evenly false :halign "center"
    (workspaces)
  )
)

(defwidget right-group []
  (box :class "right-group" :space-evenly false :halign "end"
    "Something elsse"
  )    
)



; ---- Actual Components ---- ;

(defwidget time-date []
    time
)

(defpoll time :interval "10s"
  "date '+%H:%M | %d. %b'"
)


(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/change-active-workspace {} ${current_workspace}" :class "workspaces"
    (box :space-evenly true
      (label :text "${workspaces}${current_workspace}" :visible false)
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box :class "workspace-icon ${workspace.id == current_workspace ? "focus" : ""} ${workspace.windows > 0 ? "in-use" : "empty"}"
            (label :text " ${workspace.id}")
            )
          )
        )
      )
    )
  )



; Windows ; 
(defwindow bar1
  :monitor 1
  :windowtype "dock"
  :stacking "fg"
  :wm-ignore false
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "40px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))
