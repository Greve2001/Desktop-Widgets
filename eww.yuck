(defwidget bar []
  (centerbox :class "bar" :orientation "h" 
    (left-group) (middle-group) (right-group)
))


; ---- Compartments ----;

(defwidget left-group []
  (box :class "left-group" :space-evenly false :halign "start"
    (time-date)
    (spacer :icon "")
    (system-tray)
  )    
)

(defwidget middle-group []
  (box :class "middle-group" :space-evenly false :halign "center"
    (workspaces)
  )
)

(defwidget right-group []
  (box :class "right-group" :space-evenly false :halign "end"
    (spacer :icon "")
    "Something elsse"
  )    
)



; ---- Actual Components ---- ;
; Time - Date
(defpoll time :interval "10s" "date '+%H:%M | %d. %b'")
(defwidget time-date []
    time
)


; Workspaces
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")

(defwidget workspaces []
  (box :class "workspaces" :space-evenly true
    (label :text "${workspaces}${current_workspace}" :visible false)
    (for workspace in workspaces
      (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
        (box :class "workspace-icon ${workspace.id == current_workspace ? "focus" : ""} ${workspace.windows > 0 ? "in-use" : "empty"}"
          (label :text " ${workspace.id}")
        )
      )
    )
  )
)


; System tray
(defvar tray-elements "[1, 2, 3, 4]")
(defwidget system-tray []
  (box :class "system-tray"
    (for element in tray-elements
      (box :class "system-tray-element"
        (label :text "()") 
      )
    )
  )
)


; Spacer
(defwidget spacer [?icon]
  (box :class "spacer"
    (label :text "${icon}")
  )
)


; Windows ; 
(defwindow bar1
  :monitor 1
  :stacking "fg"
  :exclusive "true"
  :focusable "false"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "99%"
                      :height "3%"
                      :anchor "top center")
  (bar))
